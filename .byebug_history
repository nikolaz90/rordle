continue
c
continue
format
exit
controller.send(:compute_colors, "FILTER", ["FILTER"] )
controller.send(:compute_colors, "FILTER", { answer: ["FILTER"] })
controller.send(:compute_colors, "FILTER", { answer: "FILTER" })
controller.send(:compute_colors, "FILTER","FILTER")
controller.send(:compute_colors)
controller.compute_colors()
controller.compute_colors
controller
exit
GamesController
GamesController.hide_methods
GamesController.private_methods
GamesController.:private_methods
GamesController.
GamesController.compute_colors
GamesController.compute_colors("FILTER","FILTER")
GamesController.compute_colors()
GamesController
self
self.compute_colors()
compute_colors()
exit
 post :answer, params: { game: { answer: "FILTER" } }, format: :turbo_stream
response
response.locals
response
response.commit!response
response.commit!
response.commit
response.to_h
response.hash
response.as_json
response.to_json
response.body
response.message
response.parsed_body.locals
response.parsed_body
response.methods
response.params
response
exit
response.template
response.body
response_body
response.media_type
session
response.parsed_body
response.:parsed_body
response.methods
response.methhods
response.target
response.targetr
response.body
response.methods
response.content
response.header
response.body
response
c
exit
response.to_a.third
response.to_a.third.response
response.to_a.third
response.to_a.third[:@response]
response.to_a.third[@response]
response.to_a.third
response.to_a.third.to_a
response.to_a.third.body_parts
response.to_a.third
response.to_a.third.permit
response.to_a.third
response.to_a.third[0]
response.to_a.third.first
response.to_a.third.body.response
response.to_a.third.body
response.to_a.third
response.to_a.third.to_h
response.to_a.third
response.to_a.third.@response
response.to_a.third.response
response.to_a.third
response.to_a.third[:stream]
response.to_a.third.stream
response.to_a.third
response.to_a.third.to_a
response.to_a.third
response.to_a.second
response.to_a.first
response.to_a.count
response.to_a
response.first
response
clear
header
params
exit
params
response
continue
response.buf
response
continue
response
response.body
response.media_type
esponse.media_type
response.body
response.data
response.stream.locals
response.stream
response.to_a.second
response.to_a.seoncd
response.to_a.last
response.to_a.size
response.to_a
response.to_h
response.to_g
response.to_a
response.message
response.body
response.header
puts response.methods.sort
p response.methods.sort
response.methods.sort
response.methods
response.locals
response
response[:locals]
response[:localsÂ°
response
params
controller.params
controller.params[:locals]
controller.params[:colors]
controller.params
controller
response.body[:colors]
response[:colors]
response.body.locals
response.body
response.local
response.locals
response.body
response.date
response.data
response.values
response.code
response.params
colors
params
response
response.answers
response.params
response
exit
self.compute_colors("FILTER", ["FILTER"])
selfcompute_colors("FILTER", ["FILTER"])
compute_colors("FILTER", ["FILTER"])
session
session[:rails_method]
rails_method
continue
documentation.gsub(/.\b/,'')[0..200]
documentation[0..200]
documentation[0..100]
documentation
documentation.gsub(/.\b/,"")
documentation.count("\b")
documentation
continue
`ri 'include?'`
`ri 'filter!'`
`ri 'filter'`
`ri 'exclude?'`
`ri "exclude?"`
`ri exclude\?`
`ri exclude?`
"ri \"#{method}\""
"ri #{method}"
`ri #{method}`
`ri "#{method}"`
method
continue
format.turbo_stream { puts 'gog' }
format.turbo_stream
format
continue
is_a_valid_answer?(answer)
continue
colors
continue
colors
alphabet
colors
continue
answer
continue
session.values
session.keys
continue
session.values
params
continue
params[:answer]
session.values
sessions.values
session.keys
exit
c
answers
c
